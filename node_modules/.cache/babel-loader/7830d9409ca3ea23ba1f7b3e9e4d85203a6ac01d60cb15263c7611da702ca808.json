{"ast":null,"code":"function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/*!\n * Raty - A Star Rating Plugin\n *\n * author: Washington Botelho\n * github: wbotelhos/raty\n * version: 4.3.0\n */\nvar Raty = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {object} element\n   * @param {object} options\n   *\n   */\n  function Raty(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Raty);\n    this.element = element;\n    this.opt = _objectSpread(_objectSpread(_objectSpread({}, this.defaultOptions()), options), this._parseOptions(element.dataset));\n  }\n  return _createClass(Raty, [{\n    key: \"defaultOptions\",\n    value: function defaultOptions() {\n      return {\n        cancelButton: false,\n        cancelClass: 'raty-cancel',\n        cancelHint: 'Cancel this rating!',\n        cancelOff: 'cancel-off.png',\n        cancelOn: 'cancel-on.png',\n        cancelPlace: 'left',\n        click: undefined,\n        half: false,\n        halfShow: true,\n        hints: ['bad', 'poor', 'regular', 'good', 'gorgeous'],\n        iconRange: undefined,\n        iconRangeSame: false,\n        mouseout: undefined,\n        mouseover: undefined,\n        noRatedMsg: 'Not rated yet!',\n        number: 5,\n        numberMax: 20,\n        path: undefined,\n        precision: false,\n        readOnly: false,\n        round: {\n          down: 0.25,\n          full: 0.6,\n          up: 0.76\n        },\n        score: undefined,\n        scoreName: 'score',\n        single: false,\n        space: true,\n        starHalf: 'star-half.png',\n        starOff: 'star-off.png',\n        starOn: 'star-on.png',\n        starType: 'img',\n        target: undefined,\n        targetFormat: '{score}',\n        targetKeep: false,\n        targetScore: undefined,\n        targetText: '',\n        targetType: 'hint'\n      };\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(click) {\n      if (!this._isReadOnly()) {\n        this[click ? 'click' : 'score'](null);\n        this.scoreField.removeAttribute('value');\n      }\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"click\",\n    value: function click(score) {\n      if (!this._isReadOnly()) {\n        score = this._adjustedScore(score);\n        this._apply(score);\n        if (this.opt.click) {\n          this.opt.click.call(this, score, this.element);\n        }\n        this._target(score);\n      }\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"move\",\n    value: function move(score) {\n      var integer = parseInt(score, 10);\n      var decimal = this._getDecimal(score, 1);\n      if (integer >= this.opt.number) {\n        integer = this.opt.number - 1;\n        decimal = 10;\n      }\n      var width = this._getWidth();\n      var steps = width / 10;\n      var star = this.stars[integer];\n      var percent = star.offsetLeft + steps * decimal;\n      var evt = new Event('mousemove');\n      evt.pageX = percent;\n      this.isMove = true;\n      star.dispatchEvent(evt);\n      this.isMove = false;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"readOnly\",\n    value: function readOnly(readonly) {\n      if (this._isReadOnly() !== readonly) {\n        if (readonly) {\n          this._lock();\n        } else {\n          this._binds();\n          this._unlock();\n        }\n        this.element.dataset.readOnly = readonly;\n      }\n    }\n  }, {\n    key: \"score\",\n    value: function score() {\n      return arguments.length ? this.setScore(arguments[0]) : this.getScore();\n    }\n  }, {\n    key: \"setScore\",\n    value: function setScore(score) {\n      if (!this._isReadOnly()) {\n        score = this._adjustedScore(score);\n        this._apply(score);\n        this._target(score);\n      }\n    }\n    // TODO: model spec\n  }, {\n    key: \"getScore\",\n    value: function getScore() {\n      var score = [];\n      var value;\n      value = this.scoreField.value;\n      score.push(value ? +value : undefined);\n      return score.length > 1 ? score : score[0];\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this._executeCallbacks();\n      this._adjustNumber();\n      this._adjustHints();\n      this.opt.score = this._adjustedScore(this.opt.score);\n      if (this.opt.starType !== 'img') {\n        this._adjustStarName();\n      }\n      this._setPath();\n      this._createStars();\n      if (this.opt.cancelButton) {\n        this._createCancel();\n      }\n      if (this.opt.precision) {\n        this._adjustPrecision();\n      }\n      this._createScore();\n      this._apply(this.opt.score);\n      this._setTitle(this.opt.score);\n      this._target(this.opt.score);\n      if (this.opt.readOnly) {\n        this._lock();\n      } else {\n        this.element.style.cursor = 'pointer';\n        this._binds();\n      }\n      return this;\n    }\n\n    // private\n\n    // TODO: model spec\n  }, {\n    key: \"_adjustedScore\",\n    value: function _adjustedScore(score) {\n      if (score || score === 0) {\n        return this._between(score, 0, this.opt.number);\n      }\n    }\n  }, {\n    key: \"_adjustHints\",\n    value: function _adjustHints() {\n      // TODO: is it possible `hints` does not exist?\n      if (!this.opt.hints) {\n        this.opt.hints = [];\n      }\n      if (!this.opt.halfShow && !this.opt.half) {\n        return;\n      }\n      var steps = this.opt.precision ? 10 : 2;\n      for (var i = 0; i < this.opt.number; i++) {\n        var group = this.opt.hints[i];\n        if (Object.prototype.toString.call(group) !== '[object Array]') {\n          group = [group];\n        }\n        this.opt.hints[i] = [];\n        for (var j = 0; j < steps; j++) {\n          var hint = group[j];\n          var last = group[group.length - 1];\n          if (last === undefined) {\n            last = null;\n          }\n          this.opt.hints[i][j] = hint === undefined ? last : hint;\n        }\n      }\n    }\n  }, {\n    key: \"_adjustNumber\",\n    value: function _adjustNumber() {\n      this.opt.number = this._between(this.opt.number, 1, this.opt.numberMax);\n    }\n  }, {\n    key: \"_adjustPrecision\",\n    value: function _adjustPrecision() {\n      this.opt.half = true;\n    }\n  }, {\n    key: \"_adjustStarName\",\n    value: function _adjustStarName() {\n      var replaces = ['cancelOff', 'cancelOn', 'starHalf', 'starOff', 'starOn'];\n      this.opt.path = '';\n      for (var i = 0; i < replaces.length; i++) {\n        this.opt[replaces[i]] = this.opt[replaces[i]].replace('.', '-');\n      }\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_apply\",\n    value: function _apply(score) {\n      this._fill(score);\n      if (score) {\n        if (score > 0) {\n          this.scoreField.value = score;\n        }\n        this._roundStars(score);\n      }\n    }\n  }, {\n    key: \"_attributesForIndex\",\n    value: function _attributesForIndex(i) {\n      var name = this._nameForIndex(i);\n      var attributes = {\n        alt: i,\n        src: this.opt.path + this.opt[name]\n      };\n      if (this.opt.starType !== 'img') {\n        attributes = {\n          'data-alt': i,\n          'class': this.opt[name]\n        };\n      }\n      attributes.title = this._getHint(i);\n      return attributes;\n    }\n  }, {\n    key: \"_between\",\n    value: function _between(value, min, max) {\n      return Math.min(Math.max(parseFloat(value), min), max);\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_binds\",\n    value: function _binds() {\n      if (this.cancelButton) {\n        this._bindOverCancel();\n        this._bindClickCancel();\n        this._bindOutCancel();\n      }\n      this._bindOver();\n      this._bindClick();\n      this._bindOut();\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_bindClick\",\n    value: function _bindClick() {\n      var _this = this;\n      this.stars.forEach(function (value) {\n        value.addEventListener('click', function (evt) {\n          if (_this._isReadOnly()) {\n            return;\n          }\n          var execute;\n          var score = _this.opt.half || _this.opt.precision ? _this.element.dataset.score : value.alt || value.dataset.alt;\n          if (_this.opt.half && !_this.opt.precision) {\n            score = _this._roundHalfScore(score);\n          }\n          if (_this.opt.click) {\n            execute = _this.opt.click.call(_this, +score, _this.element, evt);\n          }\n          if (execute || execute === undefined) {\n            _this._apply(+score);\n          }\n        });\n      });\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_bindClickCancel\",\n    value: function _bindClickCancel() {\n      var _this2 = this;\n      this.cancelButton.addEventListener('click', function (evt) {\n        _this2.scoreField.removeAttribute('value');\n        if (_this2.opt.click) {\n          _this2.opt.click.call(_this2, null, _this2.element, evt);\n        }\n      });\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_bindOut\",\n    value: function _bindOut() {\n      var _this3 = this;\n      this.element.addEventListener('mouseleave', function (evt) {\n        var score = +_this3.scoreField.value || undefined;\n        _this3._apply(score);\n        _this3._target(score, evt);\n        _this3._resetTitle();\n        if (_this3.opt.mouseout) {\n          _this3.opt.mouseout.call(_this3, score, _this3.element, evt);\n        }\n      });\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_bindOutCancel\",\n    value: function _bindOutCancel() {\n      var _this4 = this;\n      this.cancelButton.addEventListener('mouseleave', function (evt) {\n        var icon = _this4.opt.cancelOff;\n        if (_this4.opt.starType !== 'img') {\n          icon = \"\".concat(_this4.opt.cancelClass, \" \").concat(icon);\n        }\n        _this4._setIcon(_this4.cancelButton, icon);\n        if (_this4.opt.mouseout) {\n          var score = +_this4.scoreField.value || undefined;\n          _this4.opt.mouseout.call(_this4, score, _this4.element, evt);\n        }\n      });\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_bindOver\",\n    value: function _bindOver() {\n      var _this5 = this;\n      var action = this.opt.half ? 'mousemove' : 'mouseover';\n      this.stars.forEach(function (value) {\n        value.addEventListener(action, function (evt) {\n          var score = _this5._getScoreByPosition(evt, value);\n          _this5._fill(score);\n          if (_this5.opt.half) {\n            _this5._roundStars(score, evt);\n            _this5._setTitle(score, evt);\n            _this5.element.dataset.score = score;\n          }\n          _this5._target(score, evt);\n          if (_this5.opt.mouseover) {\n            _this5.opt.mouseover.call(_this5, score, _this5.element, evt);\n          }\n        });\n      });\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_bindOverCancel\",\n    value: function _bindOverCancel() {\n      var _this6 = this;\n      this.cancelButton.addEventListener('mouseover', function (evt) {\n        if (_this6._isReadOnly()) {\n          return;\n        }\n        var starOff = _this6.opt.path + _this6.opt.starOff;\n        var icon = _this6.opt.cancelOn;\n        if (_this6.opt.starType === 'img') {\n          _this6.stars.forEach(function (value) {\n            value.src = starOff;\n          });\n        } else {\n          icon = _this6.opt.cancelClass + ' ' + icon;\n          _this6.stars.forEach(function (value) {\n            value.className = starOff;\n          });\n        }\n        _this6._setIcon(_this6.cancelButton, icon);\n        _this6._target(null, evt);\n        if (_this6.opt.mouseover) {\n          _this6.opt.mouseover.call(_this6, null, _this6.element, evt);\n        }\n      });\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_buildScoreField\",\n    value: function _buildScoreField() {\n      var input = document.createElement('input');\n      input.name = this.opt.scoreName;\n      input.type = 'hidden';\n      this.element.appendChild(input);\n      return input;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_createCancel\",\n    value: function _createCancel() {\n      var button = document.createElement(this.opt.starType);\n      var icon = this.opt.path + this.opt.cancelOff;\n      button.setAttribute('class', this.opt.cancelClass);\n      button.setAttribute('title', this.opt.cancelHint);\n      if (this.opt.starType === 'img') {\n        button.setAttribute('alt', 'x');\n        button.setAttribute('src', icon);\n      } else {\n        button.classList.add(icon);\n\n        // TODO: use the dataset\n        button.setAttribute('data-alt', 'x');\n      }\n      if (this.opt.cancelPlace === 'left') {\n        this.element.prepend(\"\\xA0\");\n        this.element.prepend(button);\n      } else {\n        this.element.append(\"\\xA0\");\n        this.element.appendChild(button);\n      }\n      this.cancelButton = button;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_createScore\",\n    value: function _createScore() {\n      this.scoreField = document.querySelector(this.opt.targetScore) || this._buildScoreField();\n    }\n  }, {\n    key: \"_createStars\",\n    value: function _createStars() {\n      for (var i = 1; i <= this.opt.number; i++) {\n        var attributes = this._attributesForIndex(i);\n        var star = document.createElement(this.opt.starType);\n        for (var key in attributes) {\n          star.setAttribute(key, attributes[key]);\n        }\n        this.element.appendChild(star);\n        if (this.opt.space && i < this.opt.number) {\n          this.element.append(\"\\xA0\");\n        }\n      }\n      this.stars = this.element.querySelectorAll(this.opt.starType);\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_error\",\n    value: function _error(message) {\n      throw new Error(message);\n    }\n  }, {\n    key: \"_executeCallbacks\",\n    value: function _executeCallbacks() {\n      var options = ['number', 'readOnly', 'score', 'scoreName', 'target', 'path'];\n      for (var i = 0; i < options.length; i++) {\n        if (typeof this.opt[options[i]] === 'function') {\n          var value = this.opt[options[i]].call(this, this.element);\n          if (value) {\n            this.opt[options[i]] = value;\n          } else {\n            delete this.opt[options[i]];\n          }\n        }\n      }\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_fill\",\n    value: function _fill(score) {\n      var hash = 0;\n      if (this.opt.iconRangeSame && this.opt.iconRange) {\n        while (hash < this.opt.iconRange.length && this.opt.iconRange[hash].range < score) {\n          hash++;\n        }\n      }\n      for (var i = 1; i <= this.stars.length; i++) {\n        var star = this.stars[i - 1];\n        var turnOn = this._turnOn(i, score);\n        var icon = void 0;\n        if (this.opt.iconRange && this.opt.iconRange.length > hash) {\n          var irange = this.opt.iconRange[hash];\n          icon = this._getRangeIcon(irange, turnOn);\n          if (i <= irange.range) {\n            this._setIcon(star, icon);\n          }\n          if (i === irange.range) {\n            hash++;\n          }\n        } else {\n          icon = this.opt[turnOn ? 'starOn' : 'starOff'];\n          this._setIcon(star, icon);\n        }\n      }\n    }\n  }, {\n    key: \"_getDecimal\",\n    value: function _getDecimal(number, fractions) {\n      var decimal = number.toString().split('.')[1];\n      var result = 0;\n      if (decimal) {\n        result = parseInt(decimal.slice(0, fractions), 10);\n        if (decimal.slice(1, 5) === '9999') {\n          result++;\n        }\n      }\n      return result;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_getRangeIcon\",\n    value: function _getRangeIcon(irange, turnOn) {\n      return turnOn ? irange.on || this.opt.starOn : irange.off || this.opt.starOff;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_getScoreByPosition\",\n    value: function _getScoreByPosition(evt, icon) {\n      var score = parseInt(icon.alt || icon.getAttribute('data-alt'), 10);\n      if (this.opt.half) {\n        var size = this._getWidth();\n        var percent = parseFloat((evt.pageX - icon.getBoundingClientRect().x) / size);\n        score = score - 1 + percent;\n      }\n      return score;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_getHint\",\n    value: function _getHint(score, evt) {\n      if (score !== 0 && !score) {\n        return this.opt.noRatedMsg;\n      }\n      var integer = Math.ceil(score);\n      var group = this.opt.hints[(integer || 1) - 1];\n      var set = !evt || this.isMove;\n      var decimal = this._getDecimal(score, 1);\n      var hint = group;\n      if (this.opt.precision) {\n        if (set) {\n          decimal = decimal === 0 ? 9 : decimal - 1;\n        }\n        hint = group[decimal];\n      } else if (this.opt.halfShow || this.opt.half) {\n        decimal = set && decimal === 0 ? 1 : decimal > 5 ? 1 : 0;\n        hint = group[decimal];\n      }\n      return hint === '' ? '' : hint || score;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_getWidth\",\n    value: function _getWidth() {\n      // 16 is the default font-size px when icons is not redered yet\n      var width = parseFloat(this.stars[0].offsetWidth) || 16;\n      if (!width) {\n        this._error('Could not get the icon width!');\n      }\n      return width;\n    }\n  }, {\n    key: \"_isReadOnly\",\n    value: function _isReadOnly() {\n      return {\n        \"true\": true\n      }[this.element.dataset.readOnly] || false;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_lock\",\n    value: function _lock() {\n      var hint = this._getHint(this.scoreField.value);\n      this.element.style.pointerEvents = 'none';\n      this.element.title = hint;\n      this.scoreField.readOnly = true;\n      this.stars.forEach(function (value) {\n        value.title = hint;\n      });\n      if (this.cancelButton) {\n        this.cancelButton.style.display = 'none';\n      }\n      this.element.dataset.readOnly = true;\n    }\n  }, {\n    key: \"_nameForIndex\",\n    value: function _nameForIndex(i) {\n      return this.opt.score && this.opt.score >= i ? 'starOn' : 'starOff';\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_resetTitle\",\n    value: function _resetTitle() {\n      for (var i = 0; i < this.opt.number; i++) {\n        this.stars[i].title = this._getHint(i + 1);\n      }\n    }\n  }, {\n    key: \"_parseOptions\",\n    value: function _parseOptions(dataset) {\n      return Object.keys(dataset).reduce(function (acc, key) {\n        var value = {\n          \"true\": true,\n          \"false\": false\n        }[dataset[key]];\n        value = value !== null && value !== undefined ? value : dataset[key];\n        if (!isNaN(value) && Number.isInteger(parseFloat(value))) {\n          value = Number(value);\n        }\n        acc[key] = value;\n        return acc;\n      }, {});\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_roundHalfScore\",\n    value: function _roundHalfScore(score) {\n      var integer = parseInt(score, 10);\n      var decimal = this._getDecimal(score, 1);\n      if (decimal !== 0) {\n        decimal = decimal > 5 ? 1 : 0.5;\n      }\n      return integer + decimal;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_roundStars\",\n    value: function _roundStars(score, evt) {\n      var name = this._starName(score, evt);\n      if (name) {\n        var icon = this.opt[name];\n        var star = this.stars[Math.ceil(score) - 1];\n        star && this._setIcon(star, icon);\n      } // Full down: [x.00 .. x.25]\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_setIcon\",\n    value: function _setIcon(star, icon) {\n      star[this.opt.starType === 'img' ? 'src' : 'className'] = this.opt.path + icon;\n    }\n  }, {\n    key: \"_setPath\",\n    value: function _setPath() {\n      this.opt.path = this.opt.path || '';\n      if (this.opt.path && this.opt.path.slice(-1) !== '/') {\n        this.opt.path += '/';\n      }\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_setTarget\",\n    value: function _setTarget(target, score) {\n      if (score) {\n        score = this.opt.targetFormat.toString().replace('{score}', score);\n      }\n      if (target instanceof HTMLInputElement || target instanceof HTMLSelectElement) {\n        target.value = score;\n      } else {\n        target.textContent = score;\n      }\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_setTitle\",\n    value: function _setTitle(score, evt) {\n      if (score) {\n        var integer = parseInt(Math.ceil(score), 10);\n        var star = this.stars.item(integer - 1);\n        star.title = this._getHint(score, evt);\n      }\n    }\n  }, {\n    key: \"_starName\",\n    value: function _starName(score, evt) {\n      var decimal = +(score % 1).toFixed(2);\n      if (evt || this.isMove) {\n        return decimal > 0.5 ? 'starOn' : 'starHalf';\n      }\n      if (decimal <= this.opt.round.down) {\n        // Down: [x.00 ... x.25]\n        return;\n      }\n      if (this.opt.halfShow && decimal < this.opt.round.up) {\n        // Half: [x.26 ... x.75]\n        return 'starHalf';\n      }\n      if (decimal < this.opt.round.full) {\n        // Off: [x.26 .. x.6]\n        return 'starOff';\n      }\n      return 'starOn'; // Up: [x.26 ...] || [x.6 ...]\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_target\",\n    value: function _target(score, evt) {\n      if (this.opt.target) {\n        var target = document.querySelector(this.opt.target);\n        if (!target) {\n          this._error('Target selector invalid or missing!');\n        }\n        var mouseover = evt && evt.type === 'mouseover';\n        if (score === undefined) {\n          score = this.opt.targetText;\n        } else if (score === null) {\n          score = mouseover ? this.opt.cancelHint : this.opt.targetText;\n        } else {\n          if (this.opt.targetType === 'hint') {\n            score = this._getHint(score, evt);\n          } else if (this.opt.precision) {\n            score = parseFloat(score).toFixed(1);\n          }\n          var mousemove = evt && evt.type === 'mousemove';\n          if (!mouseover && !mousemove && !this.opt.targetKeep) {\n            score = this.opt.targetText;\n          }\n        }\n        this._setTarget(target, score);\n      }\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_turnOn\",\n    value: function _turnOn(i, score) {\n      return this.opt.single ? i === score : i <= score;\n    }\n\n    // TODO: model spec\n  }, {\n    key: \"_unlock\",\n    value: function _unlock() {\n      this.element.style.cursor = 'pointer';\n      this.element.style.pointerEvents = 'auto';\n      this.element.removeAttribute('title');\n      this.element.dataset.readOnly = false;\n      this.scoreField.readOnly = false;\n      this._resetTitle();\n      if (this.cancelButton) {\n        this.cancelButton.style.display = '';\n      }\n    }\n  }]);\n}();\nexport default Raty;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}